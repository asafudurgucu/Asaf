// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyApp.Data.Concrete;

#nullable disable

namespace PartyApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241206093215_InitalDb")]
    partial class InitalDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartyApp.Entity.Concrete.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Invitations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "TESTESTESRE PARTİSİ"
                        },
                        new
                        {
                            Id = 2,
                            EventDate = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "DGKO PARTİSİ"
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.InvitationParticipant", b =>
                {
                    b.Property<int>("InvitationId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("InvitationId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("InvitationParticipants");

                    b.HasData(
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 1,
                            Id = 1
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 2,
                            Id = 2
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 3,
                            Id = 3
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 4,
                            Id = 4
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 5,
                            Id = 5
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 6,
                            Id = 6
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 7,
                            Id = 7
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 8,
                            Id = 8
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 9,
                            Id = 9
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 10,
                            Id = 10
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("NumberOfPeople")
                        .HasColumnType("tinyint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Partycipants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = (byte)18,
                            Email = "a12ıdwdıj@gmail.com",
                            FullName = "Asaf",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "39283834"
                        },
                        new
                        {
                            Id = 2,
                            Age = (byte)19,
                            Email = "aıdwdı22j@gmail.com",
                            FullName = "Kemal",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "3928383224"
                        },
                        new
                        {
                            Id = 3,
                            Age = (byte)28,
                            Email = "a12ıdwdıj@gmail.com",
                            FullName = "Ömer",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "3928321834"
                        },
                        new
                        {
                            Id = 4,
                            Age = (byte)18,
                            Email = "aıdw221dıj@gmail.com",
                            FullName = "Selim",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "392813834"
                        },
                        new
                        {
                            Id = 5,
                            Age = (byte)18,
                            Email = "aıd12wdıj@gmail.com",
                            FullName = "Hakkı",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "319283834"
                        },
                        new
                        {
                            Id = 6,
                            Age = (byte)18,
                            Email = "aıd12wdıj@gmail.com",
                            FullName = "Büşra",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "392838343"
                        },
                        new
                        {
                            Id = 7,
                            Age = (byte)22,
                            Email = "ayse@example.com",
                            FullName = "Ayşe",
                            NumberOfPeople = (byte)3,
                            PhoneNumber = "39838345"
                        },
                        new
                        {
                            Id = 8,
                            Age = (byte)30,
                            Email = "mehmet@example.com",
                            FullName = "Mehmet",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "39183837"
                        },
                        new
                        {
                            Id = 9,
                            Age = (byte)25,
                            Email = "fatma@example.com",
                            FullName = "Fatma",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "39283839"
                        },
                        new
                        {
                            Id = 10,
                            Age = (byte)24,
                            Email = "ali@example.com",
                            FullName = "Ali",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "39383831"
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.InvitationParticipant", b =>
                {
                    b.HasOne("PartyApp.Entity.Concrete.Invitation", "Invitation")
                        .WithMany("InvitationParticipants")
                        .HasForeignKey("InvitationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PartyApp.Entity.Concrete.Participant", "Participant")
                        .WithMany("InvitationParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invitation");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Invitation", b =>
                {
                    b.Navigation("InvitationParticipants");
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Participant", b =>
                {
                    b.Navigation("InvitationParticipants");
                });
#pragma warning restore 612, 618
        }
    }
}
